{
	"id": "ce460b1d1cd0e50d8aef5d3ca31a1ecf",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.17",
	"solcLongVersion": "0.5.17+commit.d19bba13",
	"input": {
		"language": "Solidity",
		"sources": {
			"if_else.sol": {
				"content": "//SPDX-Licenses-Identifier:MIT\n\npragma solidity >= 0.5.0 < 0.9.0;\n\ncontract solidity {\n\n    function check (int num) public pure returns (string memory){\n\n        string memory str;\n\n        if(num >0){\n            str='num gretter';\n        }else if(num==0){\n            str='num equal';\n        }else{\n            \n        }\n    }\n\n\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"if_else.sol": {
				"solidity": {
					"abi": [
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "int256",
									"name": "num",
									"type": "int256"
								}
							],
							"name": "check",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"if_else.sol\":67:336  contract solidity {... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"if_else.sol\":67:336  contract solidity {... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"if_else.sol\":67:336  contract solidity {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"if_else.sol\":67:336  contract solidity {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x9943d669\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"if_else.sol\":92:332  function check (int num) public pure returns (string memory){... */\n    tag_3:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_5\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_5:\n        /* \"if_else.sol\":92:332  function check (int num) public pure returns (string memory){... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_6\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_7:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_9\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_7)\n    tag_9:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"if_else.sol\":92:332  function check (int num) public pure returns (string memory){... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_10\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_10:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_6:\n        /* \"if_else.sol\":138:151  string memory */\n      0x60\n        /* \"if_else.sol\":163:180  string memory str */\n      dup1\n        /* \"if_else.sol\":199:200  0 */\n      0x00\n        /* \"if_else.sol\":194:197  num */\n      dup4\n        /* \"if_else.sol\":194:200  num >0 */\n      sgt\n        /* \"if_else.sol\":191:326  if(num >0){... */\n      iszero\n      tag_12\n      jumpi\n        /* \"if_else.sol\":215:232  str='num gretter' */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x0b\n      dup2\n      mstore\n      0x20\n      add\n      0x6e756d2067726574746572000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"if_else.sol\":191:326  if(num >0){... */\n      jump(tag_13)\n    tag_12:\n        /* \"if_else.sol\":256:257  0 */\n      0x00\n        /* \"if_else.sol\":251:254  num */\n      dup4\n        /* \"if_else.sol\":251:257  num==0 */\n      eq\n        /* \"if_else.sol\":248:326  if(num==0){... */\n      iszero\n      tag_14\n      jumpi\n        /* \"if_else.sol\":272:287  str='num equal' */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x09\n      dup2\n      mstore\n      0x20\n      add\n      0x6e756d20657175616c0000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"if_else.sol\":248:326  if(num==0){... */\n      jump(tag_15)\n    tag_14:\n    tag_15:\n        /* \"if_else.sol\":191:326  if(num >0){... */\n    tag_13:\n        /* \"if_else.sol\":92:332  function check (int num) public pure returns (string memory){... */\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa265627a7a723158203a26517bf3374e01c818d15adbc6a1f60e7bc7edea41d37d1ddb9fdd3ee267fb64736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506101a3806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80639943d66914610030575b600080fd5b61005c6004803603602081101561004657600080fd5b81019080803590602001909291905050506100d7565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561009c578082015181840152602081019050610081565b50505050905090810190601f1680156100c95780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6060806000831315610120576040518060400160405280600b81526020017f6e756d20677265747465720000000000000000000000000000000000000000008152509050610168565b6000831415610166576040518060400160405280600981526020017f6e756d20657175616c00000000000000000000000000000000000000000000008152509050610167565b5b5b5091905056fea265627a7a723158203a26517bf3374e01c818d15adbc6a1f60e7bc7edea41d37d1ddb9fdd3ee267fb64736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A3 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9943D669 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x9C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x81 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xC9 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x0 DUP4 SGT ISZERO PUSH2 0x120 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6E756D2067726574746572000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x168 JUMP JUMPDEST PUSH1 0x0 DUP4 EQ ISZERO PUSH2 0x166 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6E756D20657175616C0000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x167 JUMP JUMPDEST JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 GASPRICE 0x26 MLOAD PUSH28 0xF3374E01C818D15ADBC6A1F60E7BC7EDEA41D37D1DDB9FDD3EE267FB PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "67:269:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;67:269:0;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c80639943d66914610030575b600080fd5b61005c6004803603602081101561004657600080fd5b81019080803590602001909291905050506100d7565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561009c578082015181840152602081019050610081565b50505050905090810190601f1680156100c95780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6060806000831315610120576040518060400160405280600b81526020017f6e756d20677265747465720000000000000000000000000000000000000000008152509050610168565b6000831415610166576040518060400160405280600981526020017f6e756d20657175616c00000000000000000000000000000000000000000000008152509050610167565b5b5b5091905056fea265627a7a723158203a26517bf3374e01c818d15adbc6a1f60e7bc7edea41d37d1ddb9fdd3ee267fb64736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9943D669 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x9C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x81 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xC9 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x0 DUP4 SGT ISZERO PUSH2 0x120 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6E756D2067726574746572000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x168 JUMP JUMPDEST PUSH1 0x0 DUP4 EQ ISZERO PUSH2 0x166 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6E756D20657175616C0000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x167 JUMP JUMPDEST JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 GASPRICE 0x26 MLOAD PUSH28 0xF3374E01C818D15ADBC6A1F60E7BC7EDEA41D37D1DDB9FDD3EE267FB PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "67:269:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;67:269:0;;;;;;;;;;;;;;;;;;;92:240;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;92:240:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;92:240:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;138:13;163:17;199:1;194:3;:6;191:135;;;215:17;;;;;;;;;;;;;;;;;;;191:135;;;256:1;251:3;:6;248:78;;;272:15;;;;;;;;;;;;;;;;;;;248:78;;;;191:135;92:240;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "83800",
								"executionCost": "135",
								"totalCost": "83935"
							},
							"external": {
								"check(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 67,
									"end": 336,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 67,
									"end": 336,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 67,
									"end": 336,
									"name": "MSTORE"
								},
								{
									"begin": 67,
									"end": 336,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 67,
									"end": 336,
									"name": "POP"
								},
								{
									"begin": 67,
									"end": 336,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 67,
									"end": 336,
									"name": "DUP1"
								},
								{
									"begin": 67,
									"end": 336,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 67,
									"end": 336,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 67,
									"end": 336,
									"name": "CODECOPY"
								},
								{
									"begin": 67,
									"end": 336,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 67,
									"end": 336,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a723158203a26517bf3374e01c818d15adbc6a1f60e7bc7edea41d37d1ddb9fdd3ee267fb64736f6c63430005110032",
									".code": [
										{
											"begin": 67,
											"end": 336,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 67,
											"end": 336,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 67,
											"end": 336,
											"name": "MSTORE"
										},
										{
											"begin": 67,
											"end": 336,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 67,
											"end": 336,
											"name": "POP"
										},
										{
											"begin": 67,
											"end": 336,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 67,
											"end": 336,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 67,
											"end": 336,
											"name": "LT"
										},
										{
											"begin": 67,
											"end": 336,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 67,
											"end": 336,
											"name": "JUMPI"
										},
										{
											"begin": 67,
											"end": 336,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 336,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 67,
											"end": 336,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 67,
											"end": 336,
											"name": "SHR"
										},
										{
											"begin": 67,
											"end": 336,
											"name": "DUP1"
										},
										{
											"begin": 67,
											"end": 336,
											"name": "PUSH",
											"value": "9943D669"
										},
										{
											"begin": 67,
											"end": 336,
											"name": "EQ"
										},
										{
											"begin": 67,
											"end": 336,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 67,
											"end": 336,
											"name": "JUMPI"
										},
										{
											"begin": 67,
											"end": 336,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 67,
											"end": 336,
											"name": "JUMPDEST"
										},
										{
											"begin": 67,
											"end": 336,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 336,
											"name": "DUP1"
										},
										{
											"begin": 67,
											"end": 336,
											"name": "REVERT"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "JUMPDEST"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "DUP1"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "DUP2"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "ADD"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "SWAP1"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "DUP1"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "DUP1"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "SWAP1"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "ADD"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "SWAP1"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "SWAP3"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "SWAP2"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "SWAP1"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "POP"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "POP"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "POP"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "JUMPDEST"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "MLOAD"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "DUP1"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "DUP1"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "ADD"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "DUP3"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "DUP2"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "SUB"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "DUP3"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "MSTORE"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "DUP4"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "DUP2"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "DUP2"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "MLOAD"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "DUP2"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "MSTORE"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "ADD"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "SWAP2"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "POP"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "DUP1"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "MLOAD"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "SWAP1"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "ADD"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "SWAP1"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "DUP1"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "DUP4"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "POP"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "POP"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "POP"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "SWAP1"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "POP"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "SWAP1"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "DUP2"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "ADD"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "SWAP1"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "AND"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "DUP1"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "ISZERO"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "JUMPI"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "DUP1"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "DUP3"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "SUB"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "DUP1"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "MLOAD"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "DUP4"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "SUB"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "EXP"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "SUB"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "NOT"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "AND"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "DUP2"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "MSTORE"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "ADD"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "SWAP2"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "POP"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "JUMPDEST"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "POP"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "SWAP3"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "POP"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "POP"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "POP"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "MLOAD"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "DUP1"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "SWAP2"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "SUB"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "SWAP1"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "RETURN"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "JUMPDEST"
										},
										{
											"begin": 138,
											"end": 151,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 163,
											"end": 180,
											"name": "DUP1"
										},
										{
											"begin": 199,
											"end": 200,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 194,
											"end": 197,
											"name": "DUP4"
										},
										{
											"begin": 194,
											"end": 200,
											"name": "SGT"
										},
										{
											"begin": 191,
											"end": 326,
											"name": "ISZERO"
										},
										{
											"begin": 191,
											"end": 326,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 191,
											"end": 326,
											"name": "JUMPI"
										},
										{
											"begin": 215,
											"end": 232,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 215,
											"end": 232,
											"name": "MLOAD"
										},
										{
											"begin": 215,
											"end": 232,
											"name": "DUP1"
										},
										{
											"begin": 215,
											"end": 232,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 215,
											"end": 232,
											"name": "ADD"
										},
										{
											"begin": 215,
											"end": 232,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 215,
											"end": 232,
											"name": "MSTORE"
										},
										{
											"begin": 215,
											"end": 232,
											"name": "DUP1"
										},
										{
											"begin": 215,
											"end": 232,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 215,
											"end": 232,
											"name": "DUP2"
										},
										{
											"begin": 215,
											"end": 232,
											"name": "MSTORE"
										},
										{
											"begin": 215,
											"end": 232,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 215,
											"end": 232,
											"name": "ADD"
										},
										{
											"begin": 215,
											"end": 232,
											"name": "PUSH",
											"value": "6E756D2067726574746572000000000000000000000000000000000000000000"
										},
										{
											"begin": 215,
											"end": 232,
											"name": "DUP2"
										},
										{
											"begin": 215,
											"end": 232,
											"name": "MSTORE"
										},
										{
											"begin": 215,
											"end": 232,
											"name": "POP"
										},
										{
											"begin": 215,
											"end": 232,
											"name": "SWAP1"
										},
										{
											"begin": 215,
											"end": 232,
											"name": "POP"
										},
										{
											"begin": 191,
											"end": 326,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 191,
											"end": 326,
											"name": "JUMP"
										},
										{
											"begin": 191,
											"end": 326,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 191,
											"end": 326,
											"name": "JUMPDEST"
										},
										{
											"begin": 256,
											"end": 257,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 251,
											"end": 254,
											"name": "DUP4"
										},
										{
											"begin": 251,
											"end": 257,
											"name": "EQ"
										},
										{
											"begin": 248,
											"end": 326,
											"name": "ISZERO"
										},
										{
											"begin": 248,
											"end": 326,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 248,
											"end": 326,
											"name": "JUMPI"
										},
										{
											"begin": 272,
											"end": 287,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 272,
											"end": 287,
											"name": "MLOAD"
										},
										{
											"begin": 272,
											"end": 287,
											"name": "DUP1"
										},
										{
											"begin": 272,
											"end": 287,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 272,
											"end": 287,
											"name": "ADD"
										},
										{
											"begin": 272,
											"end": 287,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 272,
											"end": 287,
											"name": "MSTORE"
										},
										{
											"begin": 272,
											"end": 287,
											"name": "DUP1"
										},
										{
											"begin": 272,
											"end": 287,
											"name": "PUSH",
											"value": "9"
										},
										{
											"begin": 272,
											"end": 287,
											"name": "DUP2"
										},
										{
											"begin": 272,
											"end": 287,
											"name": "MSTORE"
										},
										{
											"begin": 272,
											"end": 287,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 272,
											"end": 287,
											"name": "ADD"
										},
										{
											"begin": 272,
											"end": 287,
											"name": "PUSH",
											"value": "6E756D20657175616C0000000000000000000000000000000000000000000000"
										},
										{
											"begin": 272,
											"end": 287,
											"name": "DUP2"
										},
										{
											"begin": 272,
											"end": 287,
											"name": "MSTORE"
										},
										{
											"begin": 272,
											"end": 287,
											"name": "POP"
										},
										{
											"begin": 272,
											"end": 287,
											"name": "SWAP1"
										},
										{
											"begin": 272,
											"end": 287,
											"name": "POP"
										},
										{
											"begin": 248,
											"end": 326,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 248,
											"end": 326,
											"name": "JUMP"
										},
										{
											"begin": 248,
											"end": 326,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 248,
											"end": 326,
											"name": "JUMPDEST"
										},
										{
											"begin": 248,
											"end": 326,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 248,
											"end": 326,
											"name": "JUMPDEST"
										},
										{
											"begin": 191,
											"end": 326,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 191,
											"end": 326,
											"name": "JUMPDEST"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "POP"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "SWAP2"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "SWAP1"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "POP"
										},
										{
											"begin": 92,
											"end": 332,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"check(int256)": "9943d669"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"internalType\":\"int256\",\"name\":\"num\",\"type\":\"int256\"}],\"name\":\"check\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"if_else.sol\":\"solidity\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"if_else.sol\":{\"keccak256\":\"0x946c490c4b869d6f11b936609e281bed563f2404ea5b7597049b81fdce95dccb\",\"urls\":[\"bzz-raw://11befc8e35a7805af56d747fc3cc8280f5e314fa22fe8eedc38a5ee492d07c5b\",\"dweb:/ipfs/QmP87KqDjTyrQQEUmp31FJYmy4yUcSizwZsJjqXLDn77sP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"if_else.sol": {
				"ast": {
					"absolutePath": "if_else.sol",
					"exportedSymbols": {
						"solidity": [
							32
						]
					},
					"id": 33,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:33:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 32,
							"linearizedBaseContracts": [
								32
							],
							"name": "solidity",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "152:180:0",
										"statements": [
											{
												"assignments": [
													9
												],
												"declarations": [
													{
														"constant": false,
														"id": 9,
														"name": "str",
														"nodeType": "VariableDeclaration",
														"scope": 30,
														"src": "163:17:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 8,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "163:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 10,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "163:17:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 13,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 11,
														"name": "num",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "194:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 12,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "199:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "194:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 21,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 19,
															"name": "num",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3,
															"src": "251:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 20,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "256:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "251:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 27,
														"nodeType": "Block",
														"src": "302:24:0",
														"statements": []
													},
													"id": 28,
													"nodeType": "IfStatement",
													"src": "248:78:0",
													"trueBody": {
														"id": 26,
														"nodeType": "Block",
														"src": "258:40:0",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 24,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 22,
																		"name": "str",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 9,
																		"src": "272:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"hexValue": "6e756d20657175616c",
																		"id": 23,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "276:11:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_0dd3635fef18cc4e739eb7e8fb53569e4f6b0db3cfb204f7b78092c80eeb288d",
																			"typeString": "literal_string \"num equal\""
																		},
																		"value": "num equal"
																	},
																	"src": "272:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																"id": 25,
																"nodeType": "ExpressionStatement",
																"src": "272:15:0"
															}
														]
													}
												},
												"id": 29,
												"nodeType": "IfStatement",
												"src": "191:135:0",
												"trueBody": {
													"id": 18,
													"nodeType": "Block",
													"src": "201:42:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 16,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 14,
																	"name": "str",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 9,
																	"src": "215:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "6e756d2067726574746572",
																	"id": 15,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "219:13:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_b2253890e2277e74c50237ddffd3e62107838f15a6f925de58b89207b8f88b9f",
																		"typeString": "literal_string \"num gretter\""
																	},
																	"value": "num gretter"
																},
																"src": "215:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"id": 17,
															"nodeType": "ExpressionStatement",
															"src": "215:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 31,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "check",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"name": "num",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "108:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "108:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "107:9:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "138:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 5,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "138:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "137:15:0"
									},
									"scope": 32,
									"src": "92:240:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 33,
							"src": "67:269:0"
						}
					],
					"src": "32:304:0"
				},
				"id": 0
			}
		}
	}
}